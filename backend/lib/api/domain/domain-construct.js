"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DomainConstruct = void 0;
const aws_certificatemanager_1 = require("aws-cdk-lib/aws-certificatemanager");
const aws_route53_1 = require("aws-cdk-lib/aws-route53");
const constructs_1 = require("constructs");
class DomainConstruct extends constructs_1.Construct {
    constructor(scope, id) {
        super(scope, id);
        this.siteDomain = 'mloesch.it';
        this.hostedZone = aws_route53_1.HostedZone.fromHostedZoneAttributes(this, 'HostedZone', {
            hostedZoneId: 'Z06848993VY07KGYYTRUM', zoneName: this.siteDomain
        });
        this.euCertificate = new aws_certificatemanager_1.Certificate(this, 'mloeschItWildcardCertificateEU', {
            domainName: '*.mloesch.it', validation: aws_certificatemanager_1.CertificateValidation.fromDns(this.hostedZone)
        });
        this.usCertificate = new aws_certificatemanager_1.DnsValidatedCertificate(this, 'mloeschItWildcardCertificateUS', {
            domainName: `*.${this.siteDomain}`,
            hostedZone: this.hostedZone,
            region: 'us-east-1'
        });
    }
}
exports.DomainConstruct = DomainConstruct;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tYWluLWNvbnN0cnVjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRvbWFpbi1jb25zdHJ1Y3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsK0VBRTRDO0FBQzVDLHlEQUFnRTtBQUNoRSwyQ0FBcUM7QUFHckMsTUFBYSxlQUFnQixTQUFRLHNCQUFTO0lBTTFDLFlBQVksS0FBZ0IsRUFBRSxFQUFVO1FBQ3BDLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUE7UUFDaEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxZQUFZLENBQUE7UUFDOUIsSUFBSSxDQUFDLFVBQVUsR0FBRyx3QkFBVSxDQUFDLHdCQUF3QixDQUFDLElBQUksRUFBRSxZQUFZLEVBQUU7WUFDdEUsWUFBWSxFQUFFLHVCQUF1QixFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsVUFBVTtTQUNuRSxDQUFDLENBQUE7UUFDRixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksb0NBQVcsQ0FBQyxJQUFJLEVBQUUsZ0NBQWdDLEVBQUU7WUFDekUsVUFBVSxFQUFFLGNBQWMsRUFBRSxVQUFVLEVBQUUsOENBQXFCLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7U0FDekYsQ0FBQyxDQUFBO1FBQ0YsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLGdEQUF1QixDQUFDLElBQUksRUFBRSxnQ0FBZ0MsRUFBRTtZQUNyRixVQUFVLEVBQUUsS0FBSyxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2xDLFVBQVUsRUFBRSxJQUFJLENBQUMsVUFBVTtZQUMzQixNQUFNLEVBQUUsV0FBVztTQUN0QixDQUFDLENBQUE7SUFDTixDQUFDO0NBQ0o7QUFyQkQsMENBcUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDZXJ0aWZpY2F0ZSwgQ2VydGlmaWNhdGVWYWxpZGF0aW9uLCBEbnNWYWxpZGF0ZWRDZXJ0aWZpY2F0ZSwgSUNlcnRpZmljYXRlXG59IGZyb20gXCJhd3MtY2RrLWxpYi9hd3MtY2VydGlmaWNhdGVtYW5hZ2VyXCI7XG5pbXBvcnQge0hvc3RlZFpvbmUsIElIb3N0ZWRab25lfSBmcm9tIFwiYXdzLWNkay1saWIvYXdzLXJvdXRlNTNcIjtcbmltcG9ydCB7Q29uc3RydWN0fSBmcm9tIFwiY29uc3RydWN0c1wiO1xuXG5cbmV4cG9ydCBjbGFzcyBEb21haW5Db25zdHJ1Y3QgZXh0ZW5kcyBDb25zdHJ1Y3Qge1xuICAgIHJlYWRvbmx5IGV1Q2VydGlmaWNhdGU6IElDZXJ0aWZpY2F0ZVxuICAgIHJlYWRvbmx5IHVzQ2VydGlmaWNhdGU6IElDZXJ0aWZpY2F0ZVxuICAgIHJlYWRvbmx5IGhvc3RlZFpvbmU6IElIb3N0ZWRab25lXG4gICAgcmVhZG9ubHkgc2l0ZURvbWFpbjogc3RyaW5nXG5cbiAgICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nKSB7XG4gICAgICAgIHN1cGVyKHNjb3BlLCBpZClcbiAgICAgICAgdGhpcy5zaXRlRG9tYWluID0gJ21sb2VzY2guaXQnXG4gICAgICAgIHRoaXMuaG9zdGVkWm9uZSA9IEhvc3RlZFpvbmUuZnJvbUhvc3RlZFpvbmVBdHRyaWJ1dGVzKHRoaXMsICdIb3N0ZWRab25lJywge1xuICAgICAgICAgICAgaG9zdGVkWm9uZUlkOiAnWjA2ODQ4OTkzVlkwN0tHWVlUUlVNJywgem9uZU5hbWU6IHRoaXMuc2l0ZURvbWFpblxuICAgICAgICB9KVxuICAgICAgICB0aGlzLmV1Q2VydGlmaWNhdGUgPSBuZXcgQ2VydGlmaWNhdGUodGhpcywgJ21sb2VzY2hJdFdpbGRjYXJkQ2VydGlmaWNhdGVFVScsIHtcbiAgICAgICAgICAgIGRvbWFpbk5hbWU6ICcqLm1sb2VzY2guaXQnLCB2YWxpZGF0aW9uOiBDZXJ0aWZpY2F0ZVZhbGlkYXRpb24uZnJvbURucyh0aGlzLmhvc3RlZFpvbmUpXG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMudXNDZXJ0aWZpY2F0ZSA9IG5ldyBEbnNWYWxpZGF0ZWRDZXJ0aWZpY2F0ZSh0aGlzLCAnbWxvZXNjaEl0V2lsZGNhcmRDZXJ0aWZpY2F0ZVVTJywge1xuICAgICAgICAgICAgZG9tYWluTmFtZTogYCouJHt0aGlzLnNpdGVEb21haW59YCxcbiAgICAgICAgICAgIGhvc3RlZFpvbmU6IHRoaXMuaG9zdGVkWm9uZSwgLy8gQ2xvdWRmcm9udCBjZXJ0aWZpY2F0ZXMgbXVzdCBiZSBpbiB1cy1lYXN0LTFcbiAgICAgICAgICAgIHJlZ2lvbjogJ3VzLWVhc3QtMSdcbiAgICAgICAgfSlcbiAgICB9XG59Il19